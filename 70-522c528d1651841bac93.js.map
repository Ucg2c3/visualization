{"version":3,"sources":["file:///C:/dev/hediet-visualization/visualization-bundle/src/visualizers/graph/graph-visjs-visualizer/VisJsGraphViewer.tsx"],"names":["VisJsGraphViewer","divRef","nodes","edges","style","height","ref","this","newNodes","Set","n","props","add","id","update","label","undefined","color","shape","forEach","item","has","remove","newEdges","e","from","to","dashes","synchronizeData","data","current","arrows","enabled","scaleFactor","type"],"mappings":"sfAMA,IAAaA,EAAb,cAAsC,YAAtC,c,oBAIkB,KAAAC,OAAS,cACT,KAAAC,MAAQ,IAAI,IAMZ,KAAAC,MAAQ,IAAI,IAU7B,SACC,OAAO,uBAAKC,MAAO,CAAEC,OAAQ,QAAUC,IAAKC,KAAKN,SAGlD,kBACC,MAAMO,EAAW,IAAIC,IACrB,IAAK,MAAMC,KAAKH,KAAKI,MAAMT,MAC1BM,EAASI,IAAIF,EAAEG,IACfN,KAAKL,MAAMY,OAAO,CACjBD,GAAIH,EAAEG,GACNE,WAAmBC,IAAZN,EAAEK,MAAsBL,EAAEK,MAAQL,EAAEG,GAC3CI,MAAOP,EAAEO,MACTC,MAAOR,EAAEQ,QAGXX,KAAKL,MAAMiB,QAAQC,IACbZ,EAASa,IAAID,EAAKP,KACtBN,KAAKL,MAAMoB,OAAOF,KAWpB,MAAMG,EAAW,IAAId,IACrB,IAAK,MAAMC,KAAKH,KAAKI,MAAMR,MAAO,CACjC,MAAMU,GATcW,EASGd,GARjBG,GACEW,EAAEX,GAEHW,EAAEC,KAAO,OAASD,EAAEE,GAAK,IAAMF,EAAET,MAMxCQ,EAASX,IAAIC,GACbN,KAAKJ,MAAMW,OAAO,CACjBD,GAAIA,EACJE,WAAmBC,IAAZN,EAAEK,MAAsBL,EAAEK,MAAQ,GACzCU,KAAMf,EAAEe,KACRC,GAAIhB,EAAEgB,GACNT,MAAOP,EAAEO,MACTU,OAAQjB,EAAEiB,SAjBZ,IAAqBH,EAoBrBjB,KAAKJ,MAAMgB,QAAQC,IACbG,EAASF,IAAID,EAAKP,KACtBN,KAAKJ,MAAMmB,OAAOF,KAKrB,qBACCb,KAAKqB,kBAGN,oBACCrB,KAAKqB,kBAEL,MAAMC,EAAO,CACZ3B,MAAOK,KAAKL,MACZC,MAAOI,KAAKJ,OASG,IAAI,IAAQI,KAAKN,OAAO6B,QAAUD,EAPzB,CACxB1B,MAAO,CACN4B,OAAQ,CACPL,GAAI,CAAEM,SAAS,EAAMC,YAAa,EAAGC,KAAM,eAnFnClC,EAAgB,GAD5B,YACYA","file":"70-522c528d1651841bac93.js","sourcesContent":["import { Network, Options, DataSet } from \"vis-network/standalone\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as React from \"react\";\r\nimport { NodeGraphData, EdgeGraphData } from \"../sGraph\";\r\n\r\n@observer\r\nexport class VisJsGraphViewer extends React.Component<{\r\n\tnodes: NodeGraphData[];\r\n\tedges: EdgeGraphData[];\r\n}> {\r\n\tprivate readonly divRef = React.createRef<HTMLDivElement>();\r\n\tprivate readonly nodes = new DataSet<{\r\n\t\tid: string;\r\n\t\tlabel?: string;\r\n\t\tcolor?: string;\r\n\t\tshape?: string;\r\n\t}>();\r\n\tprivate readonly edges = new DataSet<{\r\n\t\tid: string;\r\n\t\tfrom: string;\r\n\t\tto: string;\r\n\t\tlabel?: string;\r\n\t\tcolor?: string;\r\n\t\tdashes?: boolean;\r\n\t\tshape?: boolean;\r\n\t}>();\r\n\r\n\trender() {\r\n\t\treturn <div style={{ height: \"100%\" }} ref={this.divRef} />;\r\n\t}\r\n\r\n\tsynchronizeData() {\r\n\t\tconst newNodes = new Set<string>();\r\n\t\tfor (const n of this.props.nodes) {\r\n\t\t\tnewNodes.add(n.id);\r\n\t\t\tthis.nodes.update({\r\n\t\t\t\tid: n.id,\r\n\t\t\t\tlabel: n.label !== undefined ? n.label : n.id,\r\n\t\t\t\tcolor: n.color,\r\n\t\t\t\tshape: n.shape,\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.nodes.forEach(item => {\r\n\t\t\tif (!newNodes.has(item.id)) {\r\n\t\t\t\tthis.nodes.remove(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction getIdOfEdge(e: EdgeGraphData): string {\r\n\t\t\tif (e.id) {\r\n\t\t\t\treturn e.id;\r\n\t\t\t}\r\n\t\t\treturn e.from + \"####\" + e.to + \"|\" + e.label;\r\n\t\t}\r\n\r\n\t\tconst newEdges = new Set<string>();\r\n\t\tfor (const n of this.props.edges) {\r\n\t\t\tconst id = getIdOfEdge(n);\r\n\t\t\tnewEdges.add(id);\r\n\t\t\tthis.edges.update({\r\n\t\t\t\tid: id,\r\n\t\t\t\tlabel: n.label !== undefined ? n.label : \"\",\r\n\t\t\t\tfrom: n.from,\r\n\t\t\t\tto: n.to,\r\n\t\t\t\tcolor: n.color,\r\n\t\t\t\tdashes: n.dashes,\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.edges.forEach(item => {\r\n\t\t\tif (!newEdges.has(item.id)) {\r\n\t\t\t\tthis.edges.remove(item);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.synchronizeData();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.synchronizeData();\r\n\r\n\t\tconst data = {\r\n\t\t\tnodes: this.nodes,\r\n\t\t\tedges: this.edges,\r\n\t\t};\r\n\t\tconst options: Options = {\r\n\t\t\tedges: {\r\n\t\t\t\tarrows: {\r\n\t\t\t\t\tto: { enabled: true, scaleFactor: 1, type: \"arrow\" },\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst network = new Network(this.divRef.current!, data, options);\r\n\t}\r\n}\r\n"],"sourceRoot":""}